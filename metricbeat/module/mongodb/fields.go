// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package mongodb

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "mongodb", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
