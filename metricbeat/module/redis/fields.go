// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
