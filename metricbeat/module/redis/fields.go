// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
