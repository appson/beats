// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
